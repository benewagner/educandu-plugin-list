{
  "version": 3,
  "sources": ["../src/list-display.js"],
  "sourcesContent": ["import { Input, Tag } from 'antd';\r\nimport ListItem from './list-item.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport uniqueId from '@educandu/educandu/utils/unique-id.js';\r\nimport cloneDeep from '@educandu/educandu/utils/clone-deep.js';\r\nimport { sectionDisplayProps } from '@educandu/educandu/ui/default-prop-types.js';\r\n\r\nconst { CheckableTag } = Tag;\r\n\r\nexport default function ListDisplay({ content }) {\r\n\r\n  const inputRef = useRef(null);\r\n  const { t } = useTranslation('benewagner/educandu-plugin-list');\r\n  const archivedByBSB = t('archivedByBSB');\r\n  const { csvData, customLabels, isCC0Music, listName, renderSearch } = content;\r\n  const tagsData = customLabels;\r\n\r\n  const customLabelsIndices = {};\r\n  for (let i = 0; i < customLabels.length; i += 1) {\r\n    customLabelsIndices[customLabels[i]] = i;\r\n  }\r\n\r\n  const getInitialCsvDisplayData = () => {\r\n    const data = cloneDeep(csvData);\r\n    data.shift();\r\n    return data;\r\n  };\r\n\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n  const firstTrackDataIndex = csvData[0].indexOf('track-1');\r\n  const unfilteredCsvDataRef = useRef(getInitialCsvDisplayData());\r\n\r\n  const [selectedTags, setSelectedTags] = useState(tagsData);\r\n  const [displayCsvData, setDisplayCsvData] = useState(cloneDeep(unfilteredCsvDataRef.current));\r\n\r\n  const areSetsEqual = (set1, set2) => {\r\n    if (set1.size !== set2.size) {\r\n      return false;\r\n    }\r\n    for (const value of set1) {\r\n      if (!set2.has(value)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const filterData = string => {\r\n    const inputText = string.trim().replace(/\\s+/g, ' ').toLowerCase();\r\n    const values = inputText.split(' ');\r\n    const valuesSet = new Set(values);\r\n    if (inputText.length > 2) {\r\n      const newData = unfilteredCsvDataRef.current.filter(item => {\r\n        const foundValuesSet = new Set();\r\n        for (const value of values) {\r\n          for (const tag of selectedTags) {\r\n            if (item[customLabelsIndices[tag]].toLowerCase().includes(value)) {\r\n              foundValuesSet.add(value);\r\n              if (areSetsEqual(valuesSet, foundValuesSet)) {\r\n                return true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n      setDisplayCsvData(newData);\r\n      setIsFiltered(true);\r\n    } else if (isFiltered) {\r\n      setDisplayCsvData(unfilteredCsvDataRef.current);\r\n      setIsFiltered(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (tag, checked) => {\r\n    const nextSelectedTags = checked\r\n      ? [...selectedTags, tag]\r\n      : selectedTags.filter(tagElem => tagElem !== tag);\r\n    setSelectedTags(nextSelectedTags);\r\n  };\r\n\r\n  const renderSearchBar = () => (\r\n    <React.Fragment>\r\n      <div>{`${t('searchWithin')}:`}</div>\r\n      <div className=\"List-checkableTags\">\r\n        {tagsData.map(tag => (\r\n          <CheckableTag\r\n            key={tag}\r\n            checked={selectedTags.includes(tag)}\r\n            onChange={checked => handleChange(tag, checked)}\r\n            >\r\n            {tag}\r\n          </CheckableTag>\r\n        ))}\r\n      </div>\r\n      <Input ref={inputRef} onChange={e => filterData(e.target.value)} allowClear style={{ maxWidth: '300px' }} />\r\n    </React.Fragment>\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!inputRef.current) {\r\n      return;\r\n    }\r\n    filterData(inputRef.current.input.value);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedTags]);\r\n\r\n  return (\r\n    <div className=\"List-Display\">\r\n      {listName !== '' ? <h1>{listName}</h1> : null}\r\n      {renderSearch ? renderSearchBar() : null}\r\n      <div>\r\n        {displayCsvData.map(arr => <ListItem key={uniqueId.create()} itemArray={arr} customLabels={customLabels} isCC0Music={isCC0Music} firstTrackDataIndex={firstTrackDataIndex} archivedByBSB={archivedByBSB} />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nListDisplay.propTypes = {\r\n  ...sectionDisplayProps\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
