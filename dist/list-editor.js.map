{
  "version": 3,
  "sources": ["../src/list-editor.js"],
  "sourcesContent": ["import Papa from 'papaparse';\r\nimport jschardet from 'jschardet';\r\nimport CSVLabel from './csv-label.js';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Logger from '@educandu/educandu/common/logger.js';\r\nimport cloneDeep from '@educandu/educandu/utils/clone-deep.js';\r\nimport React, { useRef, useId, useEffect, useState } from 'react';\r\nimport { Form, Upload, Button, Input, Divider, Switch } from 'antd';\r\nimport { FORM_ITEM_LAYOUT } from '@educandu/educandu/domain/constants.js';\r\nimport { CloudUploadOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport { sectionEditorProps } from '@educandu/educandu/ui/default-prop-types.js';\r\nimport DragAndDropContainer from '@educandu/educandu/components/drag-and-drop-container.js';\r\nimport { swapItemsAt, removeItemAt, moveItem } from '@educandu/educandu/utils/array-utils.js';\r\n\r\nconst { Dragger } = Upload;\r\nconst logger = new Logger(import.meta.url);\r\n\r\nexport default function ListEditor({ content, onContentChanged }) {\r\n\r\n  const droppableIdRef = useRef(useId());\r\n  const { t } = useTranslation('benewagner/educandu-plugin-list');\r\n  const [isCheckBoxChanged, setIsCheckboxChanged] = useState(false);\r\n  const { listName, csvData, isCC0Music, customLabels, renderSearch } = content;\r\n\r\n  const FormItem = Form.Item;\r\n  const encodingRef = useRef(null);\r\n  const filterRegex = /^(?:track|bsbLink|hmtLink)-[1-9]\\d?$/;\r\n\r\n  const updateContent = newContentValues => {\r\n    onContentChanged({ ...content, ...newContentValues });\r\n  };\r\n\r\n  // customRequest also provides onError\r\n  const customRequest = ({ file, onSuccess }) => {\r\n\r\n    Papa.parse(file, {\r\n      encoding: encodingRef.current,\r\n      complete: result => {\r\n        const displayData = cloneDeep(result.data);\r\n        if (displayData[0].length === 1) {\r\n          displayData.indexOf(';') ? displayData[0] = displayData[0][0].split(';') : displayData.shift();\r\n        }\r\n        const csvDataLabels = displayData.shift();\r\n        displayData.sort((a, b) => a[0].localeCompare(b[0]));\r\n        displayData.splice(0, 0, csvDataLabels);\r\n        const newCustomLabels = isCC0Music ? displayData[0].filter(label => !filterRegex.test(label)) : displayData[0];\r\n        updateContent({ csvData: displayData, customLabels: newCustomLabels });\r\n        onSuccess();\r\n      },\r\n      error: error => {\r\n        logger.error(error);\r\n      },\r\n      skipEmptyLines: true\r\n    });\r\n  };\r\n\r\n  const props = {\r\n    name: 'file',\r\n    maxCount: 1,\r\n    // Detect encoding of csv file. Prevents upload if no encoding is identified. If identified, pass encoding to papaparse in customRequest.\r\n    beforeUpload: file => {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = event => {\r\n\r\n          const csvResult = event.target.result.split(/\\r|\\n|\\r\\n/);\r\n\r\n          try {\r\n            encodingRef.current = jschardet.detect(csvResult.toString()).encoding;\r\n            resolve();\r\n          } catch (error) {\r\n            logger.error(error);\r\n            reject(error);\r\n          }\r\n        };\r\n\r\n        reader.readAsBinaryString(file);\r\n      });\r\n    },\r\n    customRequest,\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status === 'done') {\r\n        logger.info(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === 'error') {\r\n        logger.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n    onDrop(e) {\r\n      const filename = e.dataTransfer.files[0].name;\r\n      const extensionIndex = filename.lastIndexOf('.');\r\n      const filenameWithoutExtension = filename.substring(0, extensionIndex);\r\n      updateContent({ listName: filenameWithoutExtension });\r\n    }\r\n  };\r\n\r\n  const handleListNameChanged = event => updateContent({ listName: event.target.value });\r\n\r\n  const handleLabelChanged = (event, index) => {\r\n    const { value } = event.target;\r\n    const newCustomLabels = cloneDeep(customLabels);\r\n    newCustomLabels[index] = value;\r\n    updateContent({ customLabels: newCustomLabels });\r\n  };\r\n\r\n  const handleMoveLabelUp = index => {\r\n    const newCsvData = csvData.map(row => swapItemsAt(row, index, index - 1));\r\n    const newCustomLabels = swapItemsAt(customLabels, index, index - 1);\r\n    updateContent({ csvData: newCsvData, customLabels: newCustomLabels });\r\n  };\r\n\r\n  const handleMoveLabelDown = index => {\r\n    const newCsvData = csvData.map(row => swapItemsAt(row, index, index + 1));\r\n    const newCustomLabels = swapItemsAt(customLabels, index, index + 1);\r\n    updateContent({ csvData: newCsvData, customLabels: newCustomLabels });\r\n  };\r\n\r\n  const handleDeleteLabel = index => {\r\n    const newCsvData = csvData.map(row => removeItemAt(row, index));\r\n    const newCustomLabels = removeItemAt(customLabels, index);\r\n    updateContent({ csvData: newCsvData, customLabels: newCustomLabels });\r\n  };\r\n\r\n  const handleMoveLabel = (fromIndex, toIndex) => {\r\n    const displayData = csvData.map(row => moveItem(row, fromIndex, toIndex));\r\n    const newCustomLabels = moveItem(customLabels, fromIndex, toIndex);\r\n    const lastRow = displayData[displayData.length - 1];\r\n    lastRow.length === 1 && lastRow[0] === '' ? displayData.splice(-1, 1) : null;\r\n    const csvDataLabels = displayData.shift();\r\n    displayData.sort((a, b) => a[0].localeCompare(b[0]));\r\n    displayData.splice(0, 0, csvDataLabels);\r\n    updateContent({ csvData: displayData, customLabels: newCustomLabels });\r\n  };\r\n\r\n  const handleUpdateCC0MusicChanged = e => {\r\n    updateContent({ isCC0Music: e });\r\n    setIsCheckboxChanged(true);\r\n  };\r\n\r\n  const downloadCSV = () => {\r\n    if (!window) {\r\n      return;\r\n    }\r\n    const newCsvData = cloneDeep(csvData);\r\n    for (let i = 0; i < customLabels.length - 1; i += 1) {\r\n      newCsvData[0][i] = customLabels[i];\r\n    }\r\n    const csv = `${Papa.unparse(newCsvData, { delimiter: ',' })}`;\r\n    const blob = new Blob([csv], { type: 'text/csv' });\r\n    const blobURL = window.URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.href = blobURL;\r\n    link.download = listName !== '' && listName.length > 1 ? `${listName}.csv` : `${t('list')}.csv`;\r\n    link.click();\r\n    window.URL.revokeObjectURL(blobURL);\r\n  };\r\n\r\n  const renderCsvData = ({ label, index, dragHandleProps, isDragged, isOtherDragged, arrayLength }) => {\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CSVLabel\r\n          key={label}\r\n          index={index}\r\n          arrayLength={arrayLength}\r\n          isDragged={isDragged}\r\n          isOtherDragged={isOtherDragged}\r\n          dragHandleProps={dragHandleProps}\r\n          onMoveUp={handleMoveLabelUp}\r\n          onMoveDown={handleMoveLabelDown}\r\n          onDelete={handleDeleteLabel}\r\n          itemsCount={customLabels.length}\r\n          >\r\n          <div className=\"List-ListListList\" style={{ display: 'flex', alignItems: 'center', width: '100%', maxWidth: '900px', padding: '0.5rem 0' }}>\r\n            <div style={{ margin: '0 1rem 0 2rem', width: '100%', maxWidth: '154px', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>{label !== '' ? `${label}:` : `[${t('new')}]:`}</div>\r\n            <Input value={customLabels[index]} onChange={e => handleLabelChanged(e, index)} />\r\n          </div>\r\n        </CSVLabel>\r\n        {index === 0 ? <Divider plain>{t('foldOutContent')}</Divider> : null}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  const getDragAndDropListItems = () => csvData[0]?.map((label, index) => ({\r\n    key: label !== '' ? label : `new-label-${index}`,\r\n    render: ({ dragHandleProps, isDragged, isOtherDragged }) => renderCsvData({ label, index, dragHandleProps, isDragged, isOtherDragged, arrayLength: customLabels.length })\r\n  })).filter(elem => isCC0Music ? !filterRegex.test(elem.key) : true);\r\n\r\n  const dragAndDropLabels = getDragAndDropListItems();\r\n\r\n  useEffect(() => {\r\n    if (!isCheckBoxChanged) {\r\n      return;\r\n    }\r\n    const newCustomLabels = isCC0Music ? csvData[0].filter(label => !filterRegex.test(label)) : csvData[0];\r\n    updateContent({ customLabels: newCustomLabels });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isCC0Music, isCheckBoxChanged]);\r\n\r\n  return (\r\n    <div>\r\n      <Form labelAlign=\"left\">\r\n        <FormItem label={t('listName')} {...FORM_ITEM_LAYOUT}>\r\n          <Input value={listName} onChange={handleListNameChanged} />\r\n        </FormItem>\r\n        <FormItem label={t('csvImport')} {...FORM_ITEM_LAYOUT}>\r\n          <Dragger {...props}>\r\n            <p className=\"ant-upload-drag-icon\">\r\n              <CloudUploadOutlined />\r\n            </p>\r\n            <p className=\"ant-upload-text\">{t('uploadCsvFile')}</p>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <p className=\"EmptyState-buttonSubtext List-buttonSubtext\">\r\n                {t('dragAndDropOrClick')}\r\n              </p>\r\n            </div>\r\n          </Dragger>\r\n        </FormItem>\r\n        <FormItem label={t('csvExport')} {...FORM_ITEM_LAYOUT}>\r\n          <Button icon={<DownloadOutlined />} onClick={downloadCSV}>Download CSV</Button>\r\n        </FormItem>\r\n        <FormItem label={t('updateCC0Music')} {...FORM_ITEM_LAYOUT}>\r\n          <Switch\r\n            size=\"small\"\r\n            checked={isCC0Music}\r\n            onChange={handleUpdateCC0MusicChanged}\r\n            />\r\n        </FormItem>\r\n        <FormItem label={t('searchFunctionality')} {...FORM_ITEM_LAYOUT}>\r\n          <Switch\r\n            size=\"small\"\r\n            checked={renderSearch}\r\n            onChange={e => updateContent({ renderSearch: e })}\r\n            />\r\n        </FormItem>\r\n        {csvData[0][0] ? <Divider plain>{t('display')}</Divider> : null}\r\n        <DragAndDropContainer droppableId={droppableIdRef.current} items={dragAndDropLabels} onItemMove={handleMoveLabel} />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nListEditor.propTypes = {\r\n  ...sectionEditorProps\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
